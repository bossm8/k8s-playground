---
# https://kyverno.io/docs/writing-policies/generate/#generating-bindings
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: kyverno:generate-namespace-owner
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: namespace-owner
subjects:
- kind: ServiceAccount
  name: kyverno-background-controller
  namespace: kyverno
---
apiVersion: kyverno.io/v1
kind: ClusterPolicy
metadata:
  name: enforce-namespace-prefix
  annotations:
    policies.kyverno.io/title: Enforce Username Prefix in Namespace
    policies.kyverno.io/category: Multi-Tenancy Playground
    policies.kyverno.io/severity: warn
    policies.kyverno.io/subject: Namespace
    policies.kyverno.io/description: >-
      This policy ensures that non admin users can only create namespaces
      prefixed with their username.
spec:
  validationFailureAction: Enforce
  background: false
  rules:
    - name: require-namespace-prefix
      match:
        any:
          - resources:
              kinds:
                - Namespace
      exclude:
        any:
          - clusterRoles:
              - cluster-admin
      validate:
        message: Namespace names must start with "{{ request.userInfo.username }}-"
        pattern:
          metadata:
            name: '{{ request.userInfo.username }}-*'
---
apiVersion: kyverno.io/v1
kind: ClusterPolicy
metadata:
  name: add-tenant-label
  annotations:
    policies.kyverno.io/title: Add Namespace Tenant Label
    policies.kyverno.io/category: Multi-Tenancy Playground
    policies.kyverno.io/subject: Namespace
    policies.kyverno.io/severity: info
    policies.kyverno.io/description: >-
      This policy adds the tenant label to a created namespace by a non admin
spec:
  validationFailureAction: Enforce
  background: false
  rules:
    - name: add-tenant-label
      match:
        any:
          - resources:
              kinds:
                - Namespace
      exclude:
        any:
          - clusterRoles:
            - cluster-admin
      mutate:
        patchStrategicMerge:
          metadata:
            labels:
              kyverno.io/tenant: '{{ request.userInfo.username }}'
---
apiVersion: kyverno.io/v1
kind: ClusterPolicy
metadata:
  name: create-network-policy
  annotations:
    policies.kyverno.io/title: Add Networkpolicies to Tenant Namespace
    policies.kyverno.io/category: Multi-Tenancy Playground
    policies.kyverno.io/subject: Namespace
    policies.kyverno.io/severity: info
    policies.kyverno.io/description: >-
      This policy adds default newtorkpolicies to the tenant namespace
spec:
  validationFailureAction: Enforce
  background: false
  rules:
    - name: create-network-policy
      match:
        any:
          - resources:
              kinds:
                - Namespace
              selector:
                matchExpressions:
                  - key: kyverno.io/tenant
                    operator: Exists
      generate:
        generateExisting: true
        synchronize: true
        apiVersion: networking.k8s.io/v1
        kind: NetworkPolicy
        name: default
        namespace: '{{ request.object.metadata.name }}'
        data:
          spec:
            metadata:
              labels:
                kyverno.io/tenant: '{{ request.object.metadata.labels."kyverno.io/tenant" }}'
            podSelector: {}
            policyTypes:
              - Ingress
              - Egress
            ingress:
              - from:
                  - namespaceSelector:
                      matchLabels:
                        kyverno.io/tenant: '{{ request.object.metadata.labels."kyverno.io/tenant" }}'
                  - namespaceSelector:
                      matchExpressions:
                        - key: kubernetes.io/metadata.name
                          operator: In
                          values: 
                            - infra-observability
                            - ingress-traefik
                            - ingress-nginx
            egress:
              - to:
                - namespaceSelector:
                    matchLabels:
                      kyverno.io/tenant: '{{ request.object.metadata.labels."kyverno.io/tenant" }}'
                - ipBlock:
                    cidr: 0.0.0.0/0
                    except:
                      - 10.0.0.0/8
                      - 192.168.0.0/16
                      - 172.16.0.0/12
---
apiVersion: kyverno.io/v1
kind: ClusterPolicy
metadata:
  name: assign-namespace-owner
  annotations:
    policies.kyverno.io/title: Add Namespace Owner RoleBinding
    policies.kyverno.io/category: Multi-Tenancy Playground
    policies.kyverno.io/subject: RoleBinding
    policies.kyverno.io/severity: info
    policies.kyverno.io/description: >-
      This policy assigns namespace admin permissions to the user which created
      the namespace by binding the ClusterRole namespace-owner.
spec:
  validationFailureAction: Enforce
  background: false
  rules:
    - name: assign-namespace-owner
      match:
        any:
          - resources:
              kinds:
                - Namespace
      exclude:
        any:
          - clusterRoles:
              - cluster-admin
      generate:
        synchronize: false
        apiVersion: rbac.authorization.k8s.io/v1
        kind: RoleBinding
        name: namespace-owner
        namespace: '{{ request.object.metadata.name }}'
        data:
          metadata:
            labels:
              kyverno.io/tenant: '{{ request.userInfo.username }}'
          roleRef:
            apiGroup: rbac.authorization.k8s.io
            kind: ClusterRole
            name: namespace-owner
          subjects:
            - kind: User
              name: '{{ request.userInfo.username }}'
              apiGroup: rbac.authorization.k8s.io
