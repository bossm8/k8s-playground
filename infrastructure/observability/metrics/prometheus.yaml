---
apiVersion: v1
kind: Namespace
metadata:
  name: infra-observability
  labels:
    pod-security.kubernetes.io/enforce: privileged
---
apiVersion: source.toolkit.fluxcd.io/v1
kind: HelmRepository
metadata:
  name: prometheus-community
  namespace: infra-observability
spec:
  interval: 1h30m
  url: https://prometheus-community.github.io/helm-charts
---
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: kube-prometheus-stack
  namespace: infra-observability
spec:
  interval: 10m0s
  driftDetection:
    mode: enabled
  chart:
    spec:
      chart: kube-prometheus-stack
      version: 69.6.x
      sourceRef:
        kind: HelmRepository
        name: prometheus-community
        namespace: infra-observability
      interval: 10m0s
  values:
    global:
      rbac:
        create: true
        pspEnabled: true

    prometheusOperator:
      extraArgs:
        - --labels=cluster=${clusterName}

    prometheus:
      prometheusSpec:
        externalLabels:
          cluster: ${clusterName}
        storageSpec:
          volumeClaimTemplate:
            spec:
              accessModes:
                - ReadWriteOnce
              resources:
                requests:
                  storage: 15Gi
        retention: 14d
        retentionSize: 14.5GiB
        logFormat: json

        # Select all resources, if set it uses the release label
        # If configured to anything different all resources need to be added a
        # label manually
        serviceMonitorSelectorNilUsesHelmValues: false
        podMonitorSelectorNilUsesHelmValues: false
        ruleSelectorNilUsesHelmValues: false
        probeSelectorNilUsesHelmValues: false
        scrapeConfigSelectorNilUsesHelmValues: false

    alertmanager:
      alertmanagerSpec:
        alertmanagerConfigSelector:
          matchLabels:
            alertmanager: ${clusterName}
        alertmanagerConfigMatcherStrategy:
          type: None
        storage: 
          volumeClaimTemplate:
            spec:
              accessModes: 
                - ReadWriteOnce
              resources:
                  requests:
                    storage: 3Gi
    grafana:
      enabled: true
      adminUser: ${grafanaAdminUser}
      adminPassword: ${grafanaAdminPassword}
      ingress:
        enabled: true
        annotations:
          cert-manager.io/cluster-issuer: letsencrypt
        ingressClassName: nginx
        hosts:
          - ${grafanaHostName}
        tls: []
      sidecar:
        dashboards:
          folderAnnotation: grafana_folder
          annotations:
            grafana_folder: Kubernetes
          provider:
            foldersFromFilesStructure: true
      dashboardProviders:
        dashboardProviders.yaml:
          apiVersion: 1
          providers:
            - name: ingress
              orgId: 1
              folder: Ingress
              type: file
              options:
                path: /var/lib/grafana/dashboards/ingress
            - name: loki-sb
              orgId: 1
              folder: Loki Single Binary
              type: file
              options:
                path: /var/lib/grafana/dashboards/loki-sb
            - name: tempo
              orgId: 1
              folder: Tempo
              type: file
              options:
                path: /var/lib/grafana/dashboards/tempo
            - name: cert-manager
              orgId: 1
              folder: Cert-Manager
              type: file
              options:
                path: /var/lib/grafana/dashboards/cert-manager
      dashboards:
        ingress:
          # https://github.com/kubernetes/ingress-nginx/tree/07a1133585b5200609b5523673aa443a20ac7a1f/deploy/grafana/dashboards
          ingress-nginx:
            url: https://raw.githubusercontent.com/kubernetes/ingress-nginx/refs/heads/main/deploy/grafana/dashboards/nginx.json
          ingress-nginx-request-handling-performance:
            url: https://raw.githubusercontent.com/kubernetes/ingress-nginx/refs/heads/main/deploy/grafana/dashboards/request-handling-performance.json
          # https://github.com/traefik/traefik/tree/740b4cfd2502df4fa56a2727c5faeb821d3599a3/contrib/grafana
          traefik:
            url: https://raw.githubusercontent.com/traefik/traefik/refs/heads/master/contrib/grafana/traefik.json
          traefik-k8s:
            url: https://raw.githubusercontent.com/traefik/traefik/refs/heads/master/contrib/grafana/traefik-kubernetes.json
        loki-sb:
          loki-chunks:
            url: https://raw.githubusercontent.com/bossm8/loki/refs/heads/feat/loki-single-binary-dashboards/production/loki-mixin-compiled-sb/dashboards/loki-chunks.json
          loki-deletion:
            url: https://raw.githubusercontent.com/bossm8/loki/refs/heads/feat/loki-single-binary-dashboards/production/loki-mixin-compiled-sb/dashboards/loki-deletion.json
          loki-writes:
            url: https://raw.githubusercontent.com/bossm8/loki/refs/heads/feat/loki-single-binary-dashboards/production/loki-mixin-compiled-sb/dashboards/loki-writes.json
          loki-reads:
            url: https://raw.githubusercontent.com/bossm8/loki/refs/heads/feat/loki-single-binary-dashboards/production/loki-mixin-compiled-sb/dashboards/loki-reads.json
          loki-operational:
            url: https://raw.githubusercontent.com/bossm8/loki/refs/heads/feat/loki-single-binary-dashboards/production/loki-mixin-compiled-sb/dashboards/loki-operational.json
          loki-retention:
            url: https://raw.githubusercontent.com/bossm8/loki/refs/heads/feat/loki-single-binary-dashboards/production/loki-mixin-compiled-sb/dashboards/loki-retention.json
          loki-logs:
            url: https://raw.githubusercontent.com/bossm8/loki/refs/heads/feat/loki-single-binary-dashboards/production/loki-mixin-compiled-sb/dashboards/loki-logs.json
          loki-recording-rules:
            url: https://raw.githubusercontent.com/bossm8/loki/refs/heads/feat/loki-single-binary-dashboards/production/loki-mixin-compiled-sb/dashboards/loki-mixin-recording-rules.json
        tempo:
          # https://github.com/grafana/tempo/tree/a8e43302876f49359ccdf3a93b7321db0c028280/operations/tempo-mixin-compiled/dashboards
          tempo-operational:
            url: https://raw.githubusercontent.com/grafana/tempo/refs/heads/main/operations/tempo-mixin-compiled/dashboards/tempo-operational.json
          tempo-reads:
            url: https://raw.githubusercontent.com/grafana/tempo/refs/heads/main/operations/tempo-mixin-compiled/dashboards/tempo-reads.json
          tempo-resources:
            url: https://raw.githubusercontent.com/grafana/tempo/refs/heads/main/operations/tempo-mixin-compiled/dashboards/tempo-resources.json
          tempo-rollout-progress:
            url: https://raw.githubusercontent.com/grafana/tempo/refs/heads/main/operations/tempo-mixin-compiled/dashboards/tempo-rollout-progress.json
          tempo-tenants:
            url: https://raw.githubusercontent.com/grafana/tempo/refs/heads/main/operations/tempo-mixin-compiled/dashboards/tempo-tenants.json
          tempo-writes:
            url: https://raw.githubusercontent.com/grafana/tempo/refs/heads/main/operations/tempo-mixin-compiled/dashboards/tempo-writes.json
        cert-manager:
          # https://gitlab.com/uneeq-oss/cert-manager-mixin/-/tree/9a8a0816dbac8a6074a4cc1677535798b4e7c9c4/dashboards
          cert-manager:
            url: https://gitlab.com/uneeq-oss/cert-manager-mixin/-/raw/master/dashboards/cert-manager.json?ref_type=heads


    nodeExporter:
      enabled: true
      operatingSystems:
        linux:
          enabled: true
        aix:
          enabled: false
        darwin:
          enabled: false

    kubelet:
      serviceMonitor:
        relabelings:
          - action: replace
            sourceLabels: [__metrics_path__]
            targetLabel: metrics_path
          - action: replace
            targetLabel: cluster
            replacement: ${clusterName}
        cAdvisorRelabelings:   
          - action: replace
            targetLabel: cluster
            replacement: ${clusterName}
          - action: replace
            sourceLabels: [__metrics_path__]
            targetLabel: metrics_path
        probesRelabelings:
          - action: replace
            sourceLabels: [__metrics_path__]
            targetLabel: metrics_path
          - action: replace
            targetLabel: cluster
            replacement: ${clusterName}
        resourceRelabelings:
          - action: replace
            sourceLabels: [__metrics_path__]
            targetLabel: metrics_path
          - action: replace
            targetLabel: cluster
            replacement: ${clusterName}
        
    kubeEtcd:
      endpoints:
        - ${singleNodeClusterIP}

    kube-state-metrics:
      prometheus:
        monitor:
          relabelings:
            - sourceLabels: [__address__]
              targetLabel: cluster
              replacement: ${clusterName}

    prometheus-node-exporter:
      prometheus:
        monitor:
          relabelings:
            - sourceLabels: [__address__]
              targetLabel: cluster
              replacement: ${clusterName}
