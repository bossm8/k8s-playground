---
apiVersion: source.toolkit.fluxcd.io/v1
kind: HelmRepository
metadata:
  name: prometheus-community
  namespace: infra-observability
spec:
  interval: 1h30m
  url: https://prometheus-community.github.io/helm-charts
---
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: kube-prometheus-stack
  namespace: infra-observability
spec:
  interval: 10m0s
  driftDetection:
    mode: enabled
  chart:
    spec:
      chart: kube-prometheus-stack
      version: 69.6.x
      sourceRef:
        kind: HelmRepository
        name: prometheus-community
        namespace: infra-observability
      interval: 10m0s

  valuesFrom:
    - kind: ConfigMap
      name: flux-crs-metrics
    - kind: ConfigMap
      name: grafana-sc-dashboards
    - kind: ConfigMap
      name: scrape-targets

  values:
    global:
      rbac:
        create: true
        pspEnabled: true

    defaultRules:
      rules:
        kubeProxy: false
        windows: false

    prometheusOperator:
      extraArgs:
        - --labels=cluster=${clusterName}

    prometheus:
      prometheusSpec:
        externalLabels:
          cluster: ${clusterName}
        storageSpec:
          volumeClaimTemplate:
            spec:
              accessModes:
                - ReadWriteOnce
              resources:
                requests:
                  storage: 15Gi
        retention: 14d
        retentionSize: 14.5GiB
        logFormat: json

        # Select all resources, if set it uses the release label
        # If configured to anything different all resources need to be added a
        # label manually
        serviceMonitorSelectorNilUsesHelmValues: false
        podMonitorSelectorNilUsesHelmValues: false
        ruleSelectorNilUsesHelmValues: false
        probeSelectorNilUsesHelmValues: false
        scrapeConfigSelectorNilUsesHelmValues: false

    alertmanager:
      alertmanagerSpec:
        alertmanagerConfigSelector:
          matchLabels:
            alertmanager: ${clusterName}
        alertmanagerConfigMatcherStrategy:
          type: None
        storage: 
          volumeClaimTemplate:
            spec:
              accessModes: 
                - ReadWriteOnce
              resources:
                  requests:
                    storage: 3Gi
    grafana:
      enabled: true
      adminUser: ${grafanaAdminUser}
      adminPassword: ${grafanaAdminPassword}
      ingress:
        enabled: true
        annotations:
          cert-manager.io/cluster-issuer: letsencrypt
        ingressClassName: nginx
        hosts:
          - ${grafanaHostName}
        tls: []
      sidecar:
        dashboards:
          folderAnnotation: grafana_folder
          annotations:
            grafana_folder: Kubernetes
          provider:
            foldersFromFilesStructure: true
      persistence:
        enabled: true
        size: 5Gi

    nodeExporter:
      enabled: true
      operatingSystems:
        linux:
          enabled: true
        aix:
          enabled: false
        darwin:
          enabled: false

    kubelet:
      serviceMonitor:
        relabelings:
          - action: replace
            sourceLabels: [__metrics_path__]
            targetLabel: metrics_path
          - action: replace
            targetLabel: cluster
            replacement: ${clusterName}
        cAdvisorRelabelings:   
          - action: replace
            targetLabel: cluster
            replacement: ${clusterName}
          - action: replace
            sourceLabels: [__metrics_path__]
            targetLabel: metrics_path
        probesRelabelings:
          - action: replace
            sourceLabels: [__metrics_path__]
            targetLabel: metrics_path
          - action: replace
            targetLabel: cluster
            replacement: ${clusterName}
        resourceRelabelings:
          - action: replace
            sourceLabels: [__metrics_path__]
            targetLabel: metrics_path
          - action: replace
            targetLabel: cluster
            replacement: ${clusterName}
        
    kubeEtcd:
      endpoints:
        - ${singleNodeClusterIP}

    kubeProxy:
      enabled: false

    kube-state-metrics:
      prometheus:
        monitor:
          relabelings:
            - sourceLabels: [__address__]
              targetLabel: cluster
              replacement: ${clusterName}

    prometheus-node-exporter:
      prometheus:
        monitor:
          relabelings:
            - sourceLabels: [__address__]
              targetLabel: cluster
              replacement: ${clusterName}

    extraManifests:
      - apiVersion: monitoring.coreos.com/v1
        kind: PodMonitor
        metadata:
          name: flux-system
          namespace: flux-system
          labels:
            app.kubernetes.io/part-of: flux
            app.kubernetes.io/component: monitoring
        spec:
          namespaceSelector:
            matchNames:
              - flux-system
          selector:
            matchExpressions:
              - key: app
                operator: In
                values:
                  - helm-controller
                  - source-controller
                  - kustomize-controller
                  - notification-controller
                  - image-automation-controller
                  - image-reflector-controller
          podMetricsEndpoints:
            - port: http-prom
