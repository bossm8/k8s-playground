---
apiVersion: v1
kind: Namespace
metadata:
  name: infra-observability
  labels:
    pod-security.kubernetes.io/enforce: privileged
---
apiVersion: source.toolkit.fluxcd.io/v1
kind: HelmRepository
metadata:
  name: prometheus-community
  namespace: infra-observability
spec:
  interval: 1h30m
  url: https://prometheus-community.github.io/helm-charts
---
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: ${prometheusReleaseLabel}
  namespace: infra-observability
spec:
  interval: 10m0s
  driftDetection:
    mode: enabled
  chart:
    spec:
      chart: ${prometheusReleaseLabel}
      version: 69.6.x
      sourceRef:
        kind: HelmRepository
        name: prometheus-community
        namespace: infra-observability
      interval: 10m0s
  values:
    global:
      rbac:
        create: true
        pspEnabled: true

    prometheusOperator:
      extraArgs:
        - --labels=cluster=${clusterName}

    prometheus:
      prometheusSpec:
        externalLabels:
          cluster: ${clusterName}
        storageSpec:
          volumeClaimTemplate:
            spec:
              accessModes:
                - ReadWriteOnce
              resources:
                requests:
                  storage: 15Gi
        retention: 14d
        retentionSize: 14.5GiB

    alertmanager:
      alertmanagerSpec:
        alertmanagerConfigSelector:
          matchLabels:
            alertmanager: ${clusterName}
        alertmanagerConfigMatcherStrategy:
          type: None
        storage: 
          volumeClaimTemplate:
            spec:
              accessModes: 
                - ReadWriteOnce
              resources:
                  requests:
                    storage: 3Gi
    grafana:
      enabled: true
      adminUser: ${grafanaAdminUser}
      adminPassword: ${grafanaAdminPassword}
      ingress:
        enabled: true
        annotations:
          cert-manager.io/cluster-issuer: letsencrypt
        ingressClassName: nginx
        hosts:
          - ${grafanaHostName}
        tls:
          - secretName: grafana-ingress-tls
            hosts:
              - ${grafanaHostName}
      sidecar:
        dashboards:
          folderAnnotation: grafana_folder
          annotations:
            grafana_folder: Kubernetes
          provider:
            foldersFromFilesStructure: true
      dashboardProviders:
        dashboardProviders.yaml:
          apiVersion: 1
          providers:
            - name: ingress
              orgId: 1
              folder: Ingress
              type: file
              options:
                path: /var/lib/grafana/dashboards/ingress
      dashboards:
        ingress:
          # https://github.com/kubernetes/ingress-nginx/tree/07a1133585b5200609b5523673aa443a20ac7a1f/deploy/grafana/dashboards
          ingress-nginx:
            url: https://raw.githubusercontent.com/kubernetes/ingress-nginx/refs/heads/main/deploy/grafana/dashboards/nginx.json
          ingress-nginx-request-handling-performance:
            url: https://raw.githubusercontent.com/kubernetes/ingress-nginx/refs/heads/main/deploy/grafana/dashboards/request-handling-performance.json
          # https://github.com/traefik/traefik/tree/740b4cfd2502df4fa56a2727c5faeb821d3599a3/contrib/grafana
          traefik:
            url: https://raw.githubusercontent.com/traefik/traefik/refs/heads/master/contrib/grafana/traefik.json
          traefik-k8s:
            url: https://raw.githubusercontent.com/traefik/traefik/refs/heads/master/contrib/grafana/traefik-kubernetes.json

    nodeExporter:
      enabled: true
      operatingSystems:
        linux:
          enabled: true
        aix:
          enabled: false
        darwin:
          enabled: false

    kubelet:
      serviceMonitor:
        relabelings:
          - action: replace
            sourceLabels: [__metrics_path__]
            targetLabel: metrics_path
          - action: replace
            targetLabel: cluster
            replacement: ${clusterName}
        cAdvisorRelabelings:   
          - action: replace
            targetLabel: cluster
            replacement: ${clusterName}
          - action: replace
            sourceLabels: [__metrics_path__]
            targetLabel: metrics_path
        probesRelabelings:
          - action: replace
            sourceLabels: [__metrics_path__]
            targetLabel: metrics_path
          - action: replace
            targetLabel: cluster
            replacement: ${clusterName}
        resourceRelabelings:
          - action: replace
            sourceLabels: [__metrics_path__]
            targetLabel: metrics_path
          - action: replace
            targetLabel: cluster
            replacement: ${clusterName}
        
    kubeEtcd:
      endpoints:
        - ${singleNodeClusterIP}

    kube-state-metrics:
      prometheus:
        monitor:
          relabelings:
            - sourceLabels: [__address__]
              targetLabel: cluster
              replacement: ${clusterName}

    prometheus-node-exporter:
      prometheus:
        monitor:
          relabelings:
            - sourceLabels: [__address__]
              targetLabel: cluster
              replacement: ${clusterName}
