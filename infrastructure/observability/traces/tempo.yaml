---
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: tempo
  namespace: infra-observability
spec:
  interval: 10m0s
  driftDetection:
    mode: enabled
  # https://fluxcd.io/flux/components/helm/helmreleases/#post-renderers
  postRenderers:
    - kustomize:
        patches:
          - target:
              group: monitoring.coreos.com
              version: v1
              kind: ServiceMonitor
              name: tempo
            patch: |
              - op: add
                path: /spec/endpoints/0/relabelings
                value:
                  - action: replace
                    replacement: ${clusterName}
                    sourceLabels: ["__address__"]
                    targetLabel: cluster
              - op: add
                path: /spec/endpoints/1/relabelings
                value:
                  - action: replace
                    replacement: ${clusterName}
                    sourceLabels: ["__address__"]
                    targetLabel: cluster
  chart:
    spec:
      chart: tempo
      version: 1.18.x
      sourceRef:
        kind: HelmRepository
        name: grafana
        namespace: infra-observability
      interval: 10m0s
  values:

    tempo:
      reportingEnabled: false
      receivers:
        otlp:
          protocols:
            grpc:
              endpoint: 0.0.0.0:4317
            http:
              endpoint: 0.0.0.0:4318

      extraEnv:
        - name: LOG_FORMAT
          value: json

    serviceMonitor:
      enabled: true

    persistence:
      enabled: true
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: tempo-datasource
  namespace: infra-observability
  labels:
    grafana_datasource: "1"
  annotations:
    kustomize.toolkit.fluxcd.io/substitute: disabled
data:
  tempo.yaml: |
    apiVersion: 1
    datasources:
      - name: Tempo
        type: tempo
        uid: tempo
        access: proxy
        url: http://tempo.infra-observability:3100
        basicAuth: false
        isDefault: false
        jsonData:
          httpMethod: GET
          tracesToLogsV2:
            datasourceUid: 'loki'
            spanStartTimeShift: '-10m'
            spanEndTimeShift: '10m'
            filterByTraceID: false
            filterBySpanID: false
            customQuery: true
            query: '{cluster=~".+"} | json | payload_trace_id="$${__trace.traceId}"'
          nodeGraph:
            enabled: true
          lokiSearch:
            datasourceUid: loki
          serviceMap:
            datasourceUid: prometheus
