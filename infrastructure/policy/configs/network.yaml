apiVersion: cilium.io/v2
kind: CiliumClusterwideNetworkPolicy
metadata:
  name: host-firewall
spec:
  nodeSelector: {}
  ingress:
  - fromCIDR:
    - ${proxyIP}/32
    toPorts:
    - ports:
      - port: '30080'
        protocol: TCP
      - port: '30433'
        protocol: TCP
      - port: '31080'
        protocol: TCP
      - port: '31433'
        protocol: TCP
  - fromCIDR:
    - ${proxyIP}/24
    toPorts:
    - ports:
      - port: '6443'
        protocol: TCP
  - fromCIDRSet:
    - cidr: ${proxyIP}/24
      except:
      -  192.168.178.200/25
    toPorts:
    - ports:
      - port: '50000'
        protocol: TCP
  - fromEntities:
    - cluster
  egress:
  - toEntities:
    - all
---
apiVersion: cilium.io/v2
kind: CiliumNetworkPolicy
metadata:
  name: blackbox-deny-all
  namespace: infra-observability
spec:
  endpointSelector:
    matchExpressions:
      - key: app.kubernetes.io/name
        operator: In
        values: 
        - prometheus-blackbox-exporter
  egress:
  - toEntities:
    - all
  ingress:
  - fromEndpoints:
    - matchExpressions:
      - key: app.kubernetes.io/name
        operator: In
        values:
        - prometheus
    toPorts:
    - ports:
      - port: '9115'
        protocol: TCP
      rules:
        http:
          - method: GET
            path: /metrics
          - method: GET
            path: /probe.*
---
apiVersion: cilium.io/v2
kind: CiliumClusterwideNetworkPolicy
metadata:
  name: dns
spec:
  endpointSelector: {}
  egress:
  - toEndpoints:
    - matchLabels:
        io.kubernetes.pod.namespace: kube-system
        k8s-app: kube-dns
    toPorts:
    - ports:
      - port: "53"
      rules:
        dns:
        - matchPattern: "*"
  - toEntities:
    - all
---
apiVersion: traefik.io/v1alpha1
kind: IngressRoute
metadata:
  name: hubble-ingress
  namespace: kube-system
  labels:
    name: hubble-ui
spec:
  entryPoints: 
  - websecure
  routes:
  - match: Host(`${hubbleHostName}`)
    kind: Rule
    services:
      - name: hubble-ui
        port: 80
  tls: {}

