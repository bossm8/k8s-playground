---
apiVersion: v1
kind: Namespace
metadata:
  name: ingress-traefik
---
apiVersion: source.toolkit.fluxcd.io/v1
kind: HelmRepository
metadata:
  name: ingress-traefik
  namespace: ingress-traefik
spec:
  interval: 1h30m
  url: https://traefik.github.io/charts
---
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: ingress-traefik
  namespace: ingress-traefik
spec:
  interval: 10m0s
  driftDetection:
    mode: enabled
  chart:
    spec:
      chart: traefik
      version: 35.0.x
      sourceRef:
        kind: HelmRepository
        name: ingress-traefik
        namespace: ingress-traefik
      interval: 10m0s
  values:

    ingressClass:
      enabled: true
      isDefaultClass: false

    gateway:
      enabled: false

    metrics:
      addInternals: true
      prometheus:
        service:
          enabled: true
        serviceMonitor:
          enabled: true

    tracing:
      addInternals: false
      serviceName: traefik8s
      otlp:
        enabled: true
        grpc:
          enabled: true
          endpoint: otel-collector-opentelemetry-collector.infra-observability:4317
          insecure: true

    logs:
      general:
        format: json
      access:
        enabled: true
        format: json

    globalArguments:
      - "--global.checknewversion=false"
      - "--global.sendanonymoususage=false"

    ingressRoute:
      dashboard:
        enabled: true
        matchRule: Host(`${traefikHostName}`)
        entryPoints:
          - websecure
        middlewares:
          - name: traefik-dashboard-redirect
            namespace: ingress-traefik

    ports:
      traefik:
        port: 8000
      web:
        port: 8080
        nodePort: 30080
        exposedPort: 30080
        redirections:
          entryPoint:
            to: websecure
            scheme: https
            permanent: true
        proxyProtocol:
          trustedIPs:
            - ${proxyIP}
            - 10.244.0.0/16
        forwardedHeaders:
          trustedIPs:
            - ${proxyIP}
            - 10.244.0.0/16
      trustedIPs: []
      websecure:
        port: 8443
        nodePort: 30443
        exposedPort: 30443
        proxyProtocol:
          trustedIPs:
            - ${proxyIP}
            - 10.244.0.0/16
        forwardedHeaders:
          trustedIPs:
            - ${proxyIP}
            - 10.244.0.0/16

    # https://v1-31.docs.kubernetes.io/docs/tutorials/services/source-ip/#source-ip-for-services-with-type-nodeport
    service:
      type: NodePort
      spec:
        externalTrafficPolicy: Local

    tlsOptions:
      default:
        minVersion: VersionTLS12
        cipherSuites:
          - TLS_CHACHA20_POLY1305_SHA256
          - TLS_AES_128_GCM_SHA256
          - TLS_AES_256_GCM_SHA384
          - TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305_SHA256
          - TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256
          - TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384
---
apiVersion: traefik.io/v1alpha1
kind: Middleware
metadata:
  name: traefik-dashboard-redirect
  namespace: ingress-traefik
spec:
  redirectRegex:
    regex: ^(https?://[^/]*)(/dashboard)?(/)?$
    replacement: $${1}/dashboard/
---
apiVersion: cilium.io/v2
kind: CiliumNetworkPolicy
metadata:
  name: allow-traefik-nodeports-for-proxy
  namespace: ingress-traefik
  annotations:
    description: >
      Allows traffic from external to this namespace only from the reverse proxy.
      This policy still allows access to other NodePort services not targeting
      the ingress-traefik pod (such as the whoami service for example).
spec:
  endpointSelector:
    matchLabels:
      app.kubernetes.io/name: ingress-traefik
  ingress:
    - fromCIDR:
      - ${proxyIP}/32
    - fromEndpoints:
      - matchLabels:
          k8s:io.kubernetes.pod.namespace: infra-observability
          k8s:app.kubernetes.io/name: prometheus
      toPorts:
      - ports:
        - port: '9100' 
          protocol: TCP
        rules:
          http:
          - method: GET
            path: /metrics
