machine:
  kubelet:
    extraMounts:
      - destination: /var/mnt
        type: bind
        source: /var/mnt
        options:
          - bind
          - rshared
          - rw
  network:
    nameservers:
      - 192.168.178.1  # Use gateway to enable Pi-Hole protection
      - 9.9.9.9        # Quad 9
      - 8.8.8.8        # Google
      - 1.1.1.1        # Cloudflare
cluster:
  controllerManager:
    extraArgs:
      bind-address: 0.0.0.0
  proxy:
    extraArgs:
      metrics-bind-address: 0.0.0.0:10249
  scheduler:
    extraArgs:
      bind-address: 0.0.0.0
  etcd:
    extraArgs:
      listen-metrics-urls: http://0.0.0.0:2381
  allowSchedulingOnControlPlanes: true
---
apiVersion: v1alpha1
kind: NetworkDefaultActionConfig
ingress: block
---
apiVersion: v1alpha1
kind: NetworkRuleConfig
name: talos-apid
portSelector:
  ports:
    - 50000
  protocol: tcp
ingress:
  - subnet: 192.168.178.0/24    # Local network
    except: 192.168.178.200/25  # Local VPN range
---
apiVersion: v1alpha1
kind: NetworkRuleConfig
name: kubectl-ingress
portSelector:
  ports:
    - 6443
  protocol: tcp
ingress:
  - subnet: 192.168.178.0/24    # Local network
  # See notes.md
  - subnet: 10.244.0.0/16       # Pod network
  - subnet: 10.96.0.0/12        # Kubernetes services
---
apiVersion: v1alpha1
kind: NetworkRuleConfig
name: etcd-ingress
portSelector:
  ports:
    - 2379
    - 2380
  protocol: tcp
ingress:
  - subnet: 192.168.178.74/32   # Talos node IP
---
apiVersion: v1alpha1
kind: NetworkRuleConfig
name: cni-vxlan-udp
portSelector:
  ports:
    - 4789
  protocol: udp
ingress:
  - subnet: 10.244.0.0/16       # Pod network
  - subnet: 10.96.0.0/12        # Kubernetes services
---
apiVersion: v1alpha1
kind: NetworkRuleConfig
name: cni-vxlan-tcp
portSelector:
  ports:
    - 4789
  protocol: tcp
ingress:
  - subnet: 10.244.0.0/16       # Pod network
  - subnet: 10.96.0.0/12        # Kubernetes services
---
apiVersion: v1alpha1
kind: NetworkRuleConfig
name: talos-trustd
portSelector:
  ports:
    - 50001
  protocol: tcp
ingress:
  - subnet: 10.244.0.0/16       # Pod network
  - subnet: 10.96.0.0/12        # Kubernetes services
---
apiVersion: v1alpha1
kind: NetworkRuleConfig
name: kubelet-ingress
portSelector:
  ports:
    - 10250
  protocol: tcp
ingress:
  - subnet: 10.244.0.0/16       # Pod network
  - subnet: 10.96.0.0/12        # Kubernetes services
---
apiVersion: v1alpha1
kind: NetworkRuleConfig
name: prometheus-exporters
portSelector:
  ports:
    - 2381                      # etcd
    - 9100                      # node-exporter
    - 10249                     # kube-proxy
    - 10257                     # kube-controller-manager
    - 10259                     # kube-scheduler 
  protocol: tcp
ingress:
  - subnet: 10.244.0.0/16       # Pod network